{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Movie Rate CRUD",
    "description": "Movie Rate Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "movier-plus.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Movies",
      "description": "API for movies in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/users/add": {
      "post": {
        "tags": ["Users"],
        "summary": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Find user in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/find": {
      "parameters": [
        {
          "name": "searchReq",
          "in": "body",
          "required": true,
          "description": "Username of user that we want to find",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Users"],
        "summary": "Find user in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/{id}/update": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to update",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "summary": "Update user from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/{id}/delete": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to delete",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/movies": {
      "get": {
        "tags": ["Movies"],
        "summary": "Get all movies from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movies"
            }
          }
        }
      }
    },
    "/api/movies/add": {
      "post": {
        "tags": ["Movies"],
        "summary": "Create new movie",
        "parameters": [
          {
            "name": "movie",
            "in": "body",
            "description": "Movie that we want to add",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/api/movies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the movie that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Movies"],
        "summary": "Find movie in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/api/movies/find": {
      "parameters": [
        {
          "name": "searchReq",
          "in": "body",
          "required": true,
          "description": "Title of the movie that we want to find",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Movies"],
        "summary": "Find movie in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/api/movies/{id}/update": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the movie that we want to update",
          "type": "string"
        }
      ],
      "patch": {
        "tags": ["Movies"],
        "parameters": [
          {
            "name": "movie",
            "in": "body",
            "description": "Movie with new values of properties",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "summary": "Update movie from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/api/movies/{id}/delete": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the movie that we want to delete",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["Movies"],
        "summary": "Delete movie from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        }
      }
    },
    "/api/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        }
      }
    },
    "/api/reviews/movies/{movie_id}": {
      "parameters": [
        {
          "name": "movie_id",
          "in": "path",
          "required": true,
          "description": "Id of the movie which reviews we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews from database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          }
        }
      }
    },
    "/api/reviews/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the review that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Reviews"],
        "summary": "Find review in database",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        }
      }
    },
    "/api/reviews/add": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Create new review",
        "parameters": [
          {
            "name": "review",
            "in": "body",
            "description": "Review that we want to add",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["email", "_id"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Movie": {
      "required": ["description","title", "_id"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "year": {
          "type": "number"
        },
        "genre": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "director": {
          "type": "string"
        },
        "actors": {
          "type": "string"
        },
        "cover": {
          "type": "string"
        },
        "trailer": {
          "type": "string"
        }
      }
    },
    "Movies": {
      "type": "array",
      "$ref": "#/definitions/Movie"
    },
    "Review": {
      "required": ["title", "description", "_id", "movie_id"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "movie_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "Reviews": {
      "type": "array",
      "$ref": "#/definitions/Review"
    }
  }
}
